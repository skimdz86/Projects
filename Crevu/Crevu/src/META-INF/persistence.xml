<?xml version="1.0" encoding="UTF-8"?>
<persistence version="1.0" xmlns="http://java.sun.com/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd">
    <persistence-unit name="crevuPersistenceUnit" transaction-type="RESOURCE_LOCAL"><!-- Oppure transaction-type=RESOURCE_LOCAL in javaSE -->
    	<provider>org.hibernate.ejb.HibernatePersistence</provider>
<!--     	<non-jta-data-source>java:/crevu_ds</non-jta-data-source> -->
<!-- 			<jta-data-source>java:jboss/datasources/crevu_ds</jta-data-source> -->
       	<class>it.crevu.db.WelcomeUser</class> <!-- vedere se magari si puÃ² usare una wildcard -->
       	<class>it.crevu.db.Address</class>
       	<class>it.crevu.db.BasketItem</class>
       	<class>it.crevu.db.Category</class>
       	<class>it.crevu.db.Notification</class>
       	<class>it.crevu.db.NotificationId</class>
       	<class>it.crevu.db.OrderDeal</class>
       	<class>it.crevu.db.OrderDealId</class>
       	<class>it.crevu.db.OrderedTshirt</class>
       	<class>it.crevu.db.OrderedTshirtId</class>
       	<class>it.crevu.db.Payment</class>
       	<class>it.crevu.db.PaymentData</class>
       	<class>it.crevu.db.PaymentId</class>
       	<class>it.crevu.db.Revenue</class>
       	<class>it.crevu.db.RevenueId</class>
       	<class>it.crevu.db.SocialAccount</class>
       	<class>it.crevu.db.SoldTshirt</class>
       	<class>it.crevu.db.SoldTshirtId</class>
       	<class>it.crevu.db.SupplierOrder</class>
       	<class>it.crevu.db.SupplierOrderId</class>
       	<class>it.crevu.db.Text</class>
       	<class>it.crevu.db.TextId</class>
       	<class>it.crevu.db.TextWish</class>
       	<class>it.crevu.db.Transaction</class>
       	<class>it.crevu.db.TransactionId</class>
       	<class>it.crevu.db.TshirtCategory</class>
       	<class>it.crevu.db.TshirtCategoryId</class>
       	<class>it.crevu.db.TshirtProposal</class>
       	<class>it.crevu.db.TshirtProposalId</class>
       	<class>it.crevu.db.User</class>
       	<class>it.crevu.db.Warehouse</class>
       	<class>it.crevu.db.WishlistItem</class>
       	<class>it.crevu.db.TshirtComment</class>
       	<class>it.crevu.db.UserCommunication</class>
       	<class>it.crevu.db.UserTshirtRanking</class>
       	<class>org.springframework.social.connect.jpa.hibernate.UserConnection</class>
       	<class>org.springframework.social.connect.jpa.hibernate.UserConnectionPK</class>
        <properties>
            <!-- 
             | The SQL dialect to use for this data source, use MySQL InnoDB as
             | we only use InnoDB tables for the entity beans.
             +-->
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
            <!-- 
             | Specify the second level query cache for hibernate.
             +-->
<!--             <property name="hibernate.cache.provider_class" value="net.sf.ehcache.hibernate.SingletonEhCacheProvider"/>"net.sf.ehcache.hibernate.EhCacheProvider"  -->
			<property name="jboss.as.jpa.providerModule" value="hibernate3-bundled"/>
<!-- 			<property name="hibernate.transaction.factory_class" value="org.hibernate.transaction.JTATransactionFactory" /> -->
<!-- 			<property name="hibernate.transaction.manager_lookup_class" value="org.hibernate.transaction.JBossTransactionManagerLookup"/> -->
<!--  			<property name="hibernate.current_session_context_class" value="jta" /> -->
			
        </properties>
    </persistence-unit>
</persistence>
