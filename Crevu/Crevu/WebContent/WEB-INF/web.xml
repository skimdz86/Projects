<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>Crevu</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>/pages/index.xhtml</welcome-file>
  </welcome-file-list>
  
   
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        	/WEB-INF/applicationContext.xml        	
        </param-value>
    </context-param>
    
    
    <!-- Java-based Spring container definition (x social)
	<context-param>
    	<param-name>contextClass</param-name>
    	<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
	</context-param>-->

	<!-- Use the simplified configuration by default. (x social)
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>simple</param-value>
	</context-param>
    -->
    
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!-- Serve per Facelets -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
  
  
  <!-- JSF config -->
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>/faces/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.jsf</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.xhtml</url-pattern>
  </servlet-mapping>
  <context-param>
    <description>State saving method: 'client' or 'server' (=default). See JSF Specification 2.5.2</description>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <param-value>client</param-value>
  </context-param>
  <context-param>
    <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
    <param-value>resources.application</param-value> <!-- ma qui devo metterci il mio package? -->
  </context-param>
  
  <!-- remove when you go on Production -->
  	<context-param>
        <param-name>javax.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
    </context-param>
	
	<context-param>
        <param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>
    
    <!-- per ora non serve, e spero mai -->
<!--    	<context-param> -->
<!-- 		<param-name>javax.faces.FACELETS_LIBRARIES</param-name> -->
<!-- 		<param-value> -->
<!-- 			/WEB-INF/taglib/crevu.taglib.xml; -->
<!-- 		</param-value> -->
<!-- 	</context-param> -->
    
<!--     <context-param> --> <!-- NO! stack overflow, Header count exceeded allowed maximum: 128 -->
<!--         <param-name>javax.faces.DEFAULT_SUFFIX</param-name> -->
<!--         <param-value>.jsf</param-value> -->
<!--     </context-param> -->
    
<!--     <context-param> --> <!-- NO! fa spaccare, conflitto con spring el resolver -->
<!-- 		<param-name>com.sun.faces.expressionFactory</param-name> -->
<!--  		<param-value>com.sun.el.ExpressionFactoryImpl</param-value> --> 
<!-- 		<param-value>org.jboss.el.ExpressionFactoryImpl</param-value> -->
<!--     </context-param> -->
    
    
  
  <session-config>
        <session-timeout>500000</session-timeout>
  </session-config>
  
  <!-- Configuration for Spring MVC (only for social) --> 
  <servlet>
  	<servlet-name>DispatcherServlet</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/config/spring-rest-config.xml</param-value>
<!-- 		<param-value>/WEB-INF/applicationContext.xml</param-value> -->
	</init-param>
<!-- 	<init-param> -->
<!-- 		<param-name>spring.profiles.default</param-name> -->
<!-- 		<param-value>simple</param-value> -->
<!-- 	</init-param> -->
	<init-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>explicit</param-value>
	</init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>DispatcherServlet</servlet-name>
  	<url-pattern>/rest/*</url-pattern>
  </servlet-mapping> 
  
  <!-- Spring security 
  <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>

  <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
  </filter-mapping>
  -->
  
  
  <!-- DA social showcase, con security, vedere se serve 
  	 Ensure UTF-8 encoded pages so that certain characters are displayed and submitted correctly 
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	 Secures the application 
	<filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>springSecurityFilterChain</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	 Enables support for DELETE and PUT request methods with web browser clients 
	<filter>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
		
	<filter>
		<filter-name>apiExceptionHandler</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>apiExceptionHandler</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
  -->
   
</web-app>